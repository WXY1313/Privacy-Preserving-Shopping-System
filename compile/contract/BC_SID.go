// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BCSIDG1Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG1Point struct {
	X *big.Int
	Y *big.Int
}

// BCSIDG2Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"BroadcastPubKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"SellerAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"SellerGetPayment\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"AddMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"CheckClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_SN\",\"type\":\"tuple\"}],\"name\":\"CreateLogisticsOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetConfirmResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetCurrentSite\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetMapping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetPointKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"GetProduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetSN\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_a1\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_z\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_u\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_s\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_attr\",\"type\":\"string\"}],\"name\":\"RegisterSID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_a1\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_z\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point[]\",\"name\":\"_u\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point[]\",\"name\":\"_s\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"_attr\",\"type\":\"string[]\"}],\"name\":\"RegisterSIDSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SIDSet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_siteID\",\"type\":\"string\"}],\"name\":\"UpdateStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_g2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pkx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pky\",\"type\":\"tuple\"}],\"name\":\"UploadACsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_code\",\"type\":\"string\"}],\"name\":\"VerifyCode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"buyerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationCode\",\"type\":\"string\"}],\"name\":\"buyerConfirmWithCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_buyerPK\",\"type\":\"tuple\"}],\"name\":\"buyerCreateOrder\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBuyerConfirm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"getSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"getSIDSet\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"point2\",\"type\":\"tuple\"}],\"name\":\"isG2Zero\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBuyerConfirm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderLogistics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"currentSite\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"SN\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"productPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"sellerAcceptOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"sellerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"stringToUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "0x60808060405234601557612fd4908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630a6307e514611a21578063122030f31461192257806312451ac914611681578063146ac0991461183e5780631614e38e146117ad5780631872c257146116bb5780631aa4a01d146116815780631db9a94b1461154657806324f474571461125d57806328a431af1461152f578063303f75801461149d57806343137afd14611440578063432964e91461138c5780634d0b1eee1461129d5780634ea85bd1146112625780635683e5ea1461125d5780636163fde71461121a578063633df11f146111135780637760cd2f146110e757806399927c35146110535780639b4b8d2a14610fda5780639b96eece14610fa05780639c0f744714610f2c578063a3ebb00014610f08578063a8fb7efd14610e02578063ac5d372314610dc0578063b94b5ca214610cf1578063d8483c7514610c9f578063dc4b6e7b14610bf9578063e1a7d43214610536578063e931de801461051d578063ed758406146104fa5763fedbe99d1461018757600080fd5b60c03660031901126104f55761019b611b2e565b602435906001600160a01b03821682036104f5576044356001600160401b0381116104f5576101ce903690600401611bb7565b6101d736611d36565b926040519260ff6002845195602081818801986101f581838c611c9d565b8101600f8152030190200154166104b05760018060a01b0316600052600d60205260406000209060018060a01b0316600052602052610238604060002082611cc0565b9160405161024581611b44565b61024e84611f0c565b8152600184015460208201526002840154604082015261027060038501611f0c565b60608201526004840154608082015261010060ff600761029260058801611fe8565b968760a08601520154818116151560c0850152818160081c16151560e085015260101c1615159101526040519260a084018481106001600160401b0382111761049a576040528352602083016001815261035f60209161034761032a84604051966102fd8289611b7b565b6000885260408a0197885260608a01986064358a5260808b019b8c52604051938492839251928391611c9d565b600f90820190815203019020965180518855602001516001880155565b511515600286019060ff801983541691151516179055565b600384019151908151916001600160401b03831161049a576103818454611ed2565b601f811161045f575b5081601f84116001146103ee575082600595936103e19895936103c4936000926103e3575b50508160011b916000199060031b1c19161790565b90555b516004840155519101906020600191805184550151910155565b005b0151905038806103af565b9190601f1984168560005283600020936000905b828210610447575050926001928592600598966103e19b98961061042e575b505050811b0190556103c7565b015160001960f88460031b161c19169055388080610421565b80600186978294978701518155019601940190610402565b61048a908560005283600020601f860160051c810191858710610490575b601f0160051c01906121a8565b3861038a565b909150819061047d565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f4c6f67697374696373206f7264657220616c72656164792065786973747300006044820152606490fd5b600080fd5b346104f557602061051361050d36611e25565b90612b11565b6040519015158152f35b346104f557602061051361053036611dd5565b906129f6565b60a03660031901126104f55761054a611b2e565b6024356001600160401b0381116104f557610569903690600401611bb7565b60403660631901126104f5576040519061058282611b60565b6064358252608435602083015260443515610bb4576001600160a01b0383166000908152600c602052604090206105b99082611cc0565b54928315610b7b57604435840293840460443503610b2b57833403610b41576000194301438111610b2b5760405160208101914283523360601b806040840152605483015240606882015260688152610613608882611b7b565b5190209260409283516106268582611b7b565b601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201526060908551966106538389611b7b565b868852601f1983013660208a013760005b60208110610a96575050506001600160a01b0384166000908152600d6020908152868220338352905285902060ff906007906106a09089611cc0565b015416610a5b5784516106b281611b44565b82815260443560208083019182528783018a81528484018a815234608086015260a08501889052600060c08601819052600160e087015261010086018190526001600160a01b038a168152600d84528a812033825290935291899020610718908b611cc0565b9284518051906001600160401b03821161049a576107368654611ed2565b601f8111610a29575b50602090601f83116001146109c2576107709291600091836109b75750508160011b916000199060031b1c19161790565b84555b516001840155516002830155518051906001600160401b03821161049a5761079e6003840154611ed2565b601f8111610982575b50602090601f83116001146108e4577f85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835969593610807846108e09e9795610100956007956000926103e35750508160011b916000199060031b1c19161790565b60038201555b6080840151600482015560a084015180516005830155602001516006820155019161084a60c08201511515849060ff801983541691151516179055565b60e0810151151561ff0084549160081b169061ff0019161783550151151562ff000082549160101b169062ff00001916179055602085519501519061089988519460c0865260c0860190611d5e565b95604435602086015288850152830152608082015280830360a0820152806108cb339560018060a01b03169488611d5e565b0390a351918291602083526020830190611d5e565b0390f35b9060038401600052806000209160005b601f198516811061096a575093600184610100946108e09f9896947f85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d768359b9a98600796601f19811610610951575b505050811b01600382015561080d565b015160001960f88460031b161c191690558f8080610941565b919260206001819286850151815501940192016108f4565b6109b190600385016000526020600020601f850160051c8101916020861061049057601f0160051c01906121a8565b8b6107a7565b015190508f806103af565b90601f1983169187600052816000209260005b818110610a1157509084600195949392106109f8575b505050811b018455610773565b015160001960f88460031b161c191690558e80806109eb565b929360206001819287860151815501950193016109d5565b610a5590876000526020600020601f850160051c8101916020861061049057601f0160051c01906121a8565b8e61073f565b845162461bcd60e51b81526020600482015260146024820152734f7264657220616c72656164792065786973747360601b6044820152606490fd5b81811a6001600160f81b0319610ab3600483901c600f1686612f8d565b5116908260011b9183830460021484151715610b2b5760001a610ad6838d612f8d565b536001600160f81b031990610aee90600f1686612f8d565b51166000916001019182600111610b17576001939291610b10911a918c612f8d565b5301610664565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08115512081cd95b9d60721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270141c9bd91d58dd081b9bdd08199bdd5b99607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f5175616e74697479206d75737420626520706f736974697665000000000000006044820152606490fd5b346104f55760403660031901126104f5576004356001600160401b0381116104f557610c29903690600401611bb7565b602435908115610c4e57610c4b9033600052600c602052604060002090611cc0565b55005b60405162461bcd60e51b8152602060048201526024808201527f556e6974207072696365206d7573742062652067726561746572207468616e206044820152637a65726f60e01b6064820152608490fd5b346104f557602060ff6007610ce1610cb636611d83565b6001600160a01b039283166000908152600d8852604080822093909416815291875291902090611cc0565b015460101c166040519015158152f35b346104f5576102003660031901126104f557610d0c36611ce6565b610d1536611d0e565b9060803660c31901126104f55760405191610d2f83611b60565b610d3a3660c4612006565b8352610d4836610104612006565b60208401526080366101431901126104f55760405191610d6783611b60565b610d7336610144612006565b8352610d8136610184612006565b60208401526101e435926001600160401b0384116104f557602094610dad610513953690600401611bb7565b936101c4359360a435916084359161285e565b346104f55760203660031901126104f5576004356001600160401b0381116104f557610dfa610df56020923690600401611bb7565b6127f9565b604051908152f35b346104f5576101203660031901126104f557610e1d36611ce6565b610e2636611d0e565b60c4356001600160401b0381116104f557610e45903690600401612062565b60e4356001600160401b0381116104f557610e64903690600401612062565b9161010435936001600160401b0385116104f557366023860112156104f5578460040135610e918161204b565b95610e9f6040519788611b7b565b8187526024602088019260051b820101903682116104f55760248101925b828410610ed95760206105138a8a8a60a4356084358c8c6124fb565b83356001600160401b0381116104f557602091610efd839260243691870101611bb7565b815201930192610ebd565b346104f55760403660031901126104f5576020610dfa610f2736611ce6565b61246c565b346104f55760203660031901126104f5576004356001600160401b0381116104f557610f8c6003610f7c6020610f696108e0953690600401611bb7565b8160405193828580945193849201611c9d565b8101600f81520301902001611f0c565b604051918291602083526020830190611d5e565b346104f55760203660031901126104f5576001600160a01b03610fc1611b2e565b16600052600e6020526020604060002054604051908152f35b346104f55760203660031901126104f5576004356001600160401b0381116104f557611041600561103160206110166040953690600401611bb7565b61101e612453565b5081865193828580945193849201611c9d565b8101600f81520301902001611fe8565b60208251918051835201516020820152f35b346104f5576103e160008080806110d16110d661106f36611bfe565b6001600160a01b03909116808552600d602090815260408087203388529091528520909391906004906110a29083611cc0565b6110b260ff60078301541661212a565b0154938552600d60209081526040808720338852909152852090611cc0565b61220e565b335af16110e16120fa565b5061224a565b346104f55760203660031901126104f55760043560005260006020526108e0610f8c6040600020611f0c565b346104f5576101403660031901126104f55761112e36611ce6565b60803660431901126104f55760405161114681611b60565b611151366044612006565b815261115e366084612006565b6020820190815260403660c31901126104f55760405161117d81611b60565b60c4358152602081019160e43583526040610103193601126104f557604051936111a685611b60565b610104358552602080860196610124358852805160025501516003555160005b600281106112055750505160005b600281106111f0575050516008555160095551600a5551600b55005b600190602083519301928160060155016111d4565b600190602083519301928160040155016111c6565b346104f55760803660031901126104f557602061051360405161123c81611b60565b611247366004612006565b8152611254366044612006565b838201526123c0565b611e6f565b6101003660031901126104f557602061051361127d36611ce6565b61128636611d0e565b9061129036611d36565b60e4359260c4359261236f565b346104f5576113396112e16112b136611d83565b9160018060a01b0316600052600d60205260406000209060018060a01b0316600052602052604060002090611cc0565b6112ea81611f0c565b9060ff600182015491602060028201549161135061130a60038301611f0c565b95600483015496600761131f60058601611fe8565b940154956040519a8b9a6101408c526101408c0190611d5e565b92868b015260408a015288820360608a0152611d5e565b946080870152805160a0870152015160c0850152818116151560e0850152818160081c16151561010085015260101c1615156101208301520390f35b346104f55760203660031901126104f5576004356001600160401b0381116104f5576113c26020610f6981933690600401611bb7565b8101600f8152030190206113d581611fe8565b908260ff6002830154166114286113ee60038501611f0c565b6113ff600560048701549601611fe8565b92604051978789985189520151858801521515604087015260e0606087015260e0860190611d5e565b926080850152805160a0850152015160c08301520390f35b346104f55760403660031901126104f557602435600435600052600160205260406000209081548110156104f55761147791611ea4565b61148757610f8c6108e091611f0c565b634e487b7160e01b600052600060045260246000fd5b346104f5576103e160008080806114b336611bfe565b90338352600d6020526040832060018060a01b038216845260205261151c6110d160046114e36040872086611cc0565b6114f360ff60078301541661212a565b0154338652600d602090815260408088206001600160a01b038716895290915286209094611cc0565b6001600160a01b03165af16110e16120fa565b346104f5576103e161154036611c40565b91612286565b346104f5576020600361157061155b36611e25565b93908160405193828580945193849201611c9d565b8101600f81520301902061158a60ff60028301541661212a565b0181516001600160401b03811161049a576115a58254611ed2565b601f811161164f575b50602092601f82116001146115ef576115e0929382916000926115e45750508160011b916000199060031b1c19161790565b9055005b0151905084806103af565b601f1982169383600052806000209160005b868110611637575083600195961061161e575b505050811b019055005b015160001960f88460031b161c19169055838080611614565b91926020600181928685015181550194019201611601565b61167b90836000526020600020601f840160051c8101916020851061049057601f0160051c01906121a8565b836115ae565b346104f55760206116b261169436611bfe565b6001600160a01b039091166000908152600c84526040902090611cc0565b54604051908152f35b346104f5576116d36116cc36611dd5565b919061246c565b6000526000602052604060002081516001600160401b03811161049a576116fa8254611ed2565b601f811161177b575b50602092601f8211600114611735576115e0929382916000926115e45750508160011b916000199060031b1c19161790565b601f1982169383600052806000209160005b868110611763575083600195961061161e57505050811b019055005b91926020600181928685015181550194019201611747565b6117a790836000526020600020601f840160051c8101916020851061049057601f0160051c01906121a8565b83611703565b346104f5576117ff6117c16112b136611d83565b600181015460ff600283015460078401549061180d6117eb60036117e488611f0c565b9701611f0c565b60405197889760e0895260e0890190611d5e565b908782036020890152611d5e565b936040860152606085015281811615156080850152818160081c16151560a085015260101c16151560c08301520390f35b346104f55760403660031901126104f55761185b610f2736611ce6565b600052600160205260406000208054906118748261204b565b916118826040519384611b7b565b80835260208301809260005260206000206000915b83831061190557848660405191829160208301906020845251809152604083019060408160051b85010192916000905b8282106118d657505050500390f35b919360019193955060206118f58192603f198a82030186528851611d5e565b96019201920185949391926118c7565b60016020819261191485611f0c565b815201920192019190611897565b346104f5576110d160026119c361193836611c40565b6001600160a01b039092166000818152600d6020908152604080832033845290915290209095919491929061196d9086611cc0565b90600782019061199a82549161198560ff841661212a565b61199460ff8460081c16612169565b88612b11565b611a0d575b505001546000858152600d6020908152604080832033845290915290209093611cc0565b81600052600e6020526040600020805490828201809211610b2b57556040519081527fcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e60203392a3005b62ff0000191662010000179055868061199f565b611a2a36611bfe565b9033600052600e602052604060002054908115611af25733600052600e60205260006040812055600080808085335af1611a626120fa565b5015611aba577fd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d68545090611a9f60405194604086526040860190611d5e565b60208501939093526001600160a01b031692339281900390a3005b60405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b600435906001600160a01b03821682036104f557565b61012081019081106001600160401b0382111761049a57604052565b604081019081106001600160401b0382111761049a57604052565b90601f801991011681019081106001600160401b0382111761049a57604052565b6001600160401b03811161049a57601f01601f191660200190565b81601f820112156104f557803590611bce82611b9c565b92611bdc6040519485611b7b565b828452602083830101116104f557816000926020809301838601378301015290565b9060406003198301126104f5576004356001600160a01b03811681036104f55791602435906001600160401b0382116104f557611c3d91600401611bb7565b90565b60606003198201126104f5576004356001600160a01b03811681036104f557916024356001600160401b0381116104f55782611c7e91600401611bb7565b91604435906001600160401b0382116104f557611c3d91600401611bb7565b60005b838110611cb05750506000910152565b8181015183820152602001611ca0565b602090611cda928260405194838680955193849201611c9d565b82019081520301902090565b60409060031901126104f55760405190611cff82611b60565b60043582526024356020830152565b60409060431901126104f55760405190611d2782611b60565b60443582526064356020830152565b60409060831901126104f55760405190611d4f82611b60565b608435825260a4356020830152565b90602091611d7781518092818552858086019101611c9d565b601f01601f1916010190565b60606003198201126104f5576004356001600160a01b03811681036104f557916024356001600160a01b03811681036104f55791604435906001600160401b0382116104f557611c3d91600401611bb7565b9060606003198301126104f557604060048303126104f557604051611df981611b60565b6004358152602435602082015291604435906001600160401b0382116104f557611c3d91600401611bb7565b9060406003198301126104f5576004356001600160401b0381116104f55782611e5091600401611bb7565b91602435906001600160401b0382116104f557611c3d91600401611bb7565b346104f55760403660031901126104f557611e8c610f2736611ce6565b60005260006020526108e0610f8c6040600020611f0c565b8054821015611ebc5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611f02575b6020831014611eec57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611ee1565b9060405191826000825492611f2084611ed2565b8084529360018116908115611f8e5750600114611f47575b50611f4592500383611b7b565b565b90506000929192526020600020906000915b818310611f72575050906020611f459282010138611f38565b6020919350806001915483858901015201910190918492611f59565b905060209250611f4594915060ff191682840152151560051b82010138611f38565b60405190611fbd82611b60565b600a548252600b546020830152565b60405190611fd982611b60565b60085482526009546020830152565b90604051611ff581611b60565b602060018294805484520154910152565b9080601f830112156104f55760408051926120218285611b7b565b839181019283116104f557905b82821061203b5750505090565b813581526020918201910161202e565b6001600160401b03811161049a5760051b60200190565b81601f820112156104f5578035906120798261204b565b926120876040519485611b7b565b82845260208085019360071b830101918183116104f557602001925b8284106120b1575050505090565b60006080858403126120f7575060206080916040516120cf81611b60565b6120d98588612006565b81526120e88560408901612006565b838201528152019301926120a3565b80fd5b3d15612125573d9061210b82611b9c565b916121196040519384611b7b565b82523d6000602084013e565b606090565b1561213157565b60405162461bcd60e51b815260206004820152601060248201526f4f72646572206e6f742061637469766560801b6044820152606490fd5b1561217057565b60405162461bcd60e51b815260206004820152601060248201526f119d5b991cc81b9bdd081b1bd8dad95960821b6044820152606490fd5b8181106121b3575050565b600081556001016121a8565b6121c98154611ed2565b90816121d3575050565b81601f600093116001146121e5575055565b8183526020832061220191601f0160051c8101906001016121a8565b8082528160208120915555565b600760009161221c816121bf565b826001820155826002820155612234600382016121bf565b8260048201558260058201558260068201550155565b1561225157565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b9133600052600d602052604060002060018060a01b0384166000526020526122b2604060002083611cc0565b6122db60078201926122ca60ff855460081c16612169565b6122d660058401611fe8565b6129f6565b156123335750600160ff198254161790557f40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a604051926020845260018060a01b0316928061232e33946020830190611d5e565b0390a3565b60008093819350611f459561151c6110d160028596015493338652600d6020526040862060018060a01b03851687526020526040862090611cc0565b9261238261238892939561238e95612b8e565b92612b8e565b90612be2565b8151815114918215926123ac575b50506123a757600190565b600090565b60209192508101519101511415388061239c565b6040516123cc81611b60565b600081526020810191600083526040516123e581611b60565b600081526020810192600084528251519051149384612442575b5083612431575b508261241d575b505061241857600090565b600190565b60209192508101510151905114388061240d565b602082015151905114925038612406565b8251602001519051149350386123ff565b6040519061246082611b60565b60006020838281520152565b602081519101516040519060208201928352604082015260408152612492606082611b7b565b51902090565b906124a28261204b565b6124af6040519182611b7b565b82815280926124c0601f199161204b565b0190602036910137565b805115611ebc5760200190565b805160011015611ebc5760400190565b8051821015611ebc5760209160051b010190565b91949296959687519561250d8761204b565b9661251b6040519889611b7b565b80885261252a601f199161204b565b0160005b8181106127e857505090612566916125468a51612498565b938560405161255481611b60565b6002548152600354602082015261236f565b156127dd5760005b84518110156126405761258a61258482876124e7565b516123c0565b61263457806125a461259e6001938b6124e7565b516127f9565b6125ae82856124e7565b526126036125dd6125d06125c284876124e7565b516125cb611fb0565b612b8e565b6125d8611fcc565b612be2565b6125e783896124e7565b516125f187612c42565b906125fc858a6124e7565b5192612d17565b61260e575b0161256e565b612618818a6124e7565b5161262382896124e7565b5261262e81886124e7565b50612608565b50600096505050505050565b50509150506126519192935061246c565b600052600160205260406000209080519068010000000000000000821161049a5782548284558083106127ae575b50602001916000526020600020916000905b8282106126a15750505050600190565b80518051906001600160401b03821161049a576126be8654611ed2565b601f811161277c575b50602090601f831160011461270f5792612700836001959460209487966000926103e35750508160011b916000199060031b1c19161790565b87555b01940191019092612691565b90601f1983169187600052816000209260005b818110612764575093602093600196938796938388951061274b575b505050811b018755612703565b015160001960f88460031b161c1916905538808061273e565b92936020600181928786015181550195019301612722565b6127a890876000526020600020601f850160051c8101916020861061049057601f0160051c01906121a8565b386126c7565b8360005282602060002091820191015b8181106127cb575061267f565b806127d76001926121bf565b016127be565b506000955050505050565b806060602080938c0101520161252e565b600061283f60209260405161282e85828161281d8183019687815193849201611c9d565b81010301601f198101835282611b7b565b604051928392839251928391611c9d565b8101039060025afa156128525760005190565b6040513d6000823e3d90fd5b9592919097969761286e856123c0565b80156129e4575b6129d7579061288c92918760405161255481611b60565b156129cd57906128a56125d06128b594936125cb611fb0565b906128af85612c42565b91612d17565b6128c1575b5060019150565b6128ca9061246c565b6000526000602052604060002082516001600160401b03811161049a576128f18254611ed2565b601f811161299b575b506020601f821160011461293657819061292c9394956000926103e35750508160011b916000199060031b1c19161790565b90555b80386128ba565b601f1982169083600052806000209160005b8181106129835750958360019596971061296a575b505050811b01905561292f565b015160001960f88460031b161c1916905538808061295d565b9192602060018192868b015181550194019201612948565b6129c790836000526020600020601f840160051c8101916020851061049057601f0160051c01906121a8565b386128fa565b5060009450505050565b5060009750505050505050565b506129ee896127f9565b841415612875565b6129ff9061246c565b9060005b826000526001602052604060002054811015612b0957826000526001602052612a30816040600020611ea4565b506040516020810191816000825492612a4884611ed2565b9360018116908115612aeb5750600114612aa9575b50612a71925003601f198101835282611b7b565b5190206040516020810190612a91602082875161281d8187858c01611c9d565b51902014612aa157600101612a03565b505050600190565b9150506000528160206000206000905b838210612ad15750506020612a719282010138612a5d565b602091925080600191548385880101520191018391612ab9565b60ff1916875250612a71938015150283016020019150389050612a5d565b505050600090565b90612b7e6020600492612b6c60405191612b3381518092868087019101611c9d565b820191611f1f60f21b84840152610df5600282868a51818c0197612b5b82602283018b611c9d565b01010301601f198101835282611b7b565b94604051938492839251928391611c9d565b8101600f81520301902001541490565b9190604051612b9c81611b60565b600081526000602082015260808194606093602060405192612bbe8785611b7b565b863685378051845201516020830152604082015260076107cf195a01fa156104f557565b60609092919260c060405191612bf783611b60565b6000835260006020840152602083968160809360405194612c188187611b7b565b368637805185520151828401528051604084015201518482015260066107cf195a01fa156104f557565b604051612c4e81611b60565b60008152600060208201525080511580612d0b575b612cf0577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208251920151067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478111610b2b5760405191612ce683611b60565b8252602082015290565b50604051612cfd81611b60565b600081526000602082015290565b50602081015115612c63565b929060609260405194612d2a8587611b7b565b60028652601f19850160005b818110612f685750612d4b6040519687611b7b565b6002865260005b818110612f25575050612d64866124ca565b52612d6e856124ca565b50612d78856124d7565b52612d82846124d7565b50612d8c836124ca565b52612d96826124ca565b50612da0826124d7565b52612daa816124d7565b50815191815183036104f557600683029280840460061481151715610b2b57612dd284612498565b9260005b828110612e1357505050506020918291604051938492612df68285611b7b565b8136853760051b910160086107cf195a01fa156104f55751151590565b612e1d81856124e7565b5151600682029082820460061483151715610b2b57612e3c82886124e7565b526020612e4983876124e7565b51015160009060018301808411612f1157612e6490896124e7565b52612e6f83856124e7565b515151905060028201808311610b2b57612e8990886124e7565b526020612e9683856124e7565b5151015160009060038301808411612f1157612eb290896124e7565b526020612ebf84866124e7565b51015151905060048201808311610b2b57612eda90886124e7565b52602080612ee884866124e7565b510151015190600060058201809211610b17575090612f0a60019392886124e7565b5201612dd6565b634e487b7160e01b83526011600452602483fd5b602090604051612f3481611b60565b60408051612f428282611b7b565b813682378252805190612f558183611b7b565b3682378382015282828a01015201612d52565b602090604051612f7781611b60565b6000815260008382015282828b01015201612d36565b908151811015611ebc57016020019056fea2646970667358221220fad3e9d7efe7a98f263e860e3caaf0a525ace282fb5343257bb12c94583ff2b264736f6c634300081c0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCaller) CheckClaim(opts *bind.CallOpts, pk BCSIDG1Point, attribute string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "CheckClaim", pk, attribute)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCallerSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractCaller) GetConfirmResult(opts *bind.CallOpts, _sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetConfirmResult", _sellerAddr, _buyerAddr, _orderID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractSession) GetConfirmResult(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	return _Contract.Contract.GetConfirmResult(&_Contract.CallOpts, _sellerAddr, _buyerAddr, _orderID)
}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractCallerSession) GetConfirmResult(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	return _Contract.Contract.GetConfirmResult(&_Contract.CallOpts, _sellerAddr, _buyerAddr, _orderID)
}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractCaller) GetCurrentSite(opts *bind.CallOpts, _orderID string) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetCurrentSite", _orderID)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractSession) GetCurrentSite(_orderID string) (string, error) {
	return _Contract.Contract.GetCurrentSite(&_Contract.CallOpts, _orderID)
}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractCallerSession) GetCurrentSite(_orderID string) (string, error) {
	return _Contract.Contract.GetCurrentSite(&_Contract.CallOpts, _orderID)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetMapping(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetMapping", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCaller) GetPointKey(opts *bind.CallOpts, pk BCSIDG1Point) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetPointKey", pk)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCallerSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractCaller) GetProduct(opts *bind.CallOpts, _addr common.Address, _productID string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetProduct", _addr, _productID)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractSession) GetProduct(_addr common.Address, _productID string) (*big.Int, error) {
	return _Contract.Contract.GetProduct(&_Contract.CallOpts, _addr, _productID)
}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractCallerSession) GetProduct(_addr common.Address, _productID string) (*big.Int, error) {
	return _Contract.Contract.GetProduct(&_Contract.CallOpts, _addr, _productID)
}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractCaller) GetSN(opts *bind.CallOpts, _orderID string) (BCSIDG1Point, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetSN", _orderID)

	if err != nil {
		return *new(BCSIDG1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BCSIDG1Point)).(*BCSIDG1Point)

	return out0, err

}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractSession) GetSN(_orderID string) (BCSIDG1Point, error) {
	return _Contract.Contract.GetSN(&_Contract.CallOpts, _orderID)
}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractCallerSession) GetSN(_orderID string) (BCSIDG1Point, error) {
	return _Contract.Contract.GetSN(&_Contract.CallOpts, _orderID)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCaller) SID(opts *bind.CallOpts, arg0 [32]byte) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "SID", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCallerSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// SIDSet is a free data retrieval call binding the contract method 0x43137afd.
//
// Solidity: function SIDSet(bytes32 , uint256 ) view returns(string)
func (_Contract *ContractCaller) SIDSet(opts *bind.CallOpts, arg0 [32]byte, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "SIDSet", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// SIDSet is a free data retrieval call binding the contract method 0x43137afd.
//
// Solidity: function SIDSet(bytes32 , uint256 ) view returns(string)
func (_Contract *ContractSession) SIDSet(arg0 [32]byte, arg1 *big.Int) (string, error) {
	return _Contract.Contract.SIDSet(&_Contract.CallOpts, arg0, arg1)
}

// SIDSet is a free data retrieval call binding the contract method 0x43137afd.
//
// Solidity: function SIDSet(bytes32 , uint256 ) view returns(string)
func (_Contract *ContractCallerSession) SIDSet(arg0 [32]byte, arg1 *big.Int) (string, error) {
	return _Contract.Contract.SIDSet(&_Contract.CallOpts, arg0, arg1)
}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractCaller) VerifyCode(opts *bind.CallOpts, _orderID string, _code string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "VerifyCode", _orderID, _code)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractSession) VerifyCode(_orderID string, _code string) (bool, error) {
	return _Contract.Contract.VerifyCode(&_Contract.CallOpts, _orderID, _code)
}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractCallerSession) VerifyCode(_orderID string, _code string) (bool, error) {
	return _Contract.Contract.VerifyCode(&_Contract.CallOpts, _orderID, _code)
}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractCaller) GetBalanceOf(opts *bind.CallOpts, seller common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getBalanceOf", seller)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractSession) GetBalanceOf(seller common.Address) (*big.Int, error) {
	return _Contract.Contract.GetBalanceOf(&_Contract.CallOpts, seller)
}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractCallerSession) GetBalanceOf(seller common.Address) (*big.Int, error) {
	return _Contract.Contract.GetBalanceOf(&_Contract.CallOpts, seller)
}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCaller) GetOrder(opts *bind.CallOpts, _seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID      string
	OrderID        string
	Quantity       *big.Int
	Price          *big.Int
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getOrder", _seller, _buyer, _orderID)

	outstruct := new(struct {
		ProductID      string
		OrderID        string
		Quantity       *big.Int
		Price          *big.Int
		IsOngoing      bool
		IsLocked       bool
		IsBuyerConfirm bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.OrderID = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.IsOngoing = *abi.ConvertType(out[4], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[5], new(bool)).(*bool)
	outstruct.IsBuyerConfirm = *abi.ConvertType(out[6], new(bool)).(*bool)

	return *outstruct, err

}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractSession) GetOrder(_seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID      string
	OrderID        string
	Quantity       *big.Int
	Price          *big.Int
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.GetOrder(&_Contract.CallOpts, _seller, _buyer, _orderID)
}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCallerSession) GetOrder(_seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID      string
	OrderID        string
	Quantity       *big.Int
	Price          *big.Int
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.GetOrder(&_Contract.CallOpts, _seller, _buyer, _orderID)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetSID(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getSID", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// GetSIDSet is a free data retrieval call binding the contract method 0x146ac099.
//
// Solidity: function getSIDSet((uint256,uint256) pk) view returns(string[])
func (_Contract *ContractCaller) GetSIDSet(opts *bind.CallOpts, pk BCSIDG1Point) ([]string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getSIDSet", pk)

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetSIDSet is a free data retrieval call binding the contract method 0x146ac099.
//
// Solidity: function getSIDSet((uint256,uint256) pk) view returns(string[])
func (_Contract *ContractSession) GetSIDSet(pk BCSIDG1Point) ([]string, error) {
	return _Contract.Contract.GetSIDSet(&_Contract.CallOpts, pk)
}

// GetSIDSet is a free data retrieval call binding the contract method 0x146ac099.
//
// Solidity: function getSIDSet((uint256,uint256) pk) view returns(string[])
func (_Contract *ContractCallerSession) GetSIDSet(pk BCSIDG1Point) ([]string, error) {
	return _Contract.Contract.GetSIDSet(&_Contract.CallOpts, pk)
}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractCaller) IsG2Zero(opts *bind.CallOpts, point2 BCSIDG2Point) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "isG2Zero", point2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractSession) IsG2Zero(point2 BCSIDG2Point) (bool, error) {
	return _Contract.Contract.IsG2Zero(&_Contract.CallOpts, point2)
}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractCallerSession) IsG2Zero(point2 BCSIDG2Point) (bool, error) {
	return _Contract.Contract.IsG2Zero(&_Contract.CallOpts, point2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCaller) OrderBook(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderBook", arg0, arg1, arg2)

	outstruct := new(struct {
		ProductID      string
		Quantity       *big.Int
		Price          *big.Int
		OrderID        string
		LockedAmount   *big.Int
		BuyerPubKey    BCSIDG1Point
		IsOngoing      bool
		IsLocked       bool
		IsBuyerConfirm bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.OrderID = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.LockedAmount = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.BuyerPubKey = *abi.ConvertType(out[5], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[6], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[7], new(bool)).(*bool)
	outstruct.IsBuyerConfirm = *abi.ConvertType(out[8], new(bool)).(*bool)

	return *outstruct, err

}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCallerSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractCaller) OrderLogistics(opts *bind.CallOpts, arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderLogistics", arg0)

	outstruct := new(struct {
		BuyerPubKey BCSIDG1Point
		IsOngoing   bool
		CurrentSite string
		Code        *big.Int
		SN          BCSIDG1Point
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.BuyerPubKey = *abi.ConvertType(out[0], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[1], new(bool)).(*bool)
	outstruct.CurrentSite = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Code = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.SN = *abi.ConvertType(out[4], new(BCSIDG1Point)).(*BCSIDG1Point)

	return *outstruct, err

}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractSession) OrderLogistics(arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	return _Contract.Contract.OrderLogistics(&_Contract.CallOpts, arg0)
}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractCallerSession) OrderLogistics(arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	return _Contract.Contract.OrderLogistics(&_Contract.CallOpts, arg0)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCaller) ProductPrices(opts *bind.CallOpts, arg0 common.Address, arg1 string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "productPrices", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCallerSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractCaller) StringToUint256(opts *bind.CallOpts, attribute string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "stringToUint256", attribute)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractSession) StringToUint256(attribute string) (*big.Int, error) {
	return _Contract.Contract.StringToUint256(&_Contract.CallOpts, attribute)
}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractCallerSession) StringToUint256(attribute string) (*big.Int, error) {
	return _Contract.Contract.StringToUint256(&_Contract.CallOpts, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactor) AddMapping(opts *bind.TransactOpts, pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "AddMapping", pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactorSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractTransactor) CreateLogisticsOrder(opts *bind.TransactOpts, _sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "CreateLogisticsOrder", _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractSession) CreateLogisticsOrder(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.CreateLogisticsOrder(&_Contract.TransactOpts, _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractTransactorSession) CreateLogisticsOrder(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.CreateLogisticsOrder(&_Contract.TransactOpts, _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// DLVerify is a paid mutator transaction binding the contract method 0x4ea85bd1.
//
// Solidity: function DLVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLVerify(opts *bind.TransactOpts, g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLVerify", g1, y1, a1, c, z)
}

// DLVerify is a paid mutator transaction binding the contract method 0x4ea85bd1.
//
// Solidity: function DLVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLVerify(g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLVerify(&_Contract.TransactOpts, g1, y1, a1, c, z)
}

// DLVerify is a paid mutator transaction binding the contract method 0x4ea85bd1.
//
// Solidity: function DLVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLVerify(g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLVerify(&_Contract.TransactOpts, g1, y1, a1, c, z)
}

// RegisterSID is a paid mutator transaction binding the contract method 0xb94b5ca2.
//
// Solidity: function RegisterSID((uint256,uint256) _pk1, (uint256,uint256) _a1, uint256 _c, uint256 _z, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractTransactor) RegisterSID(opts *bind.TransactOpts, _pk1 BCSIDG1Point, _a1 BCSIDG1Point, _c *big.Int, _z *big.Int, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "RegisterSID", _pk1, _a1, _c, _z, _u, _s, _m, _attr)
}

// RegisterSID is a paid mutator transaction binding the contract method 0xb94b5ca2.
//
// Solidity: function RegisterSID((uint256,uint256) _pk1, (uint256,uint256) _a1, uint256 _c, uint256 _z, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractSession) RegisterSID(_pk1 BCSIDG1Point, _a1 BCSIDG1Point, _c *big.Int, _z *big.Int, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.Contract.RegisterSID(&_Contract.TransactOpts, _pk1, _a1, _c, _z, _u, _s, _m, _attr)
}

// RegisterSID is a paid mutator transaction binding the contract method 0xb94b5ca2.
//
// Solidity: function RegisterSID((uint256,uint256) _pk1, (uint256,uint256) _a1, uint256 _c, uint256 _z, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractTransactorSession) RegisterSID(_pk1 BCSIDG1Point, _a1 BCSIDG1Point, _c *big.Int, _z *big.Int, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.Contract.RegisterSID(&_Contract.TransactOpts, _pk1, _a1, _c, _z, _u, _s, _m, _attr)
}

// RegisterSIDSet is a paid mutator transaction binding the contract method 0xa8fb7efd.
//
// Solidity: function RegisterSIDSet((uint256,uint256) _pk1, (uint256,uint256) _a1, uint256 _c, uint256 _z, (uint256[2],uint256[2])[] _u, (uint256[2],uint256[2])[] _s, string[] _attr) returns(bool)
func (_Contract *ContractTransactor) RegisterSIDSet(opts *bind.TransactOpts, _pk1 BCSIDG1Point, _a1 BCSIDG1Point, _c *big.Int, _z *big.Int, _u []BCSIDG2Point, _s []BCSIDG2Point, _attr []string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "RegisterSIDSet", _pk1, _a1, _c, _z, _u, _s, _attr)
}

// RegisterSIDSet is a paid mutator transaction binding the contract method 0xa8fb7efd.
//
// Solidity: function RegisterSIDSet((uint256,uint256) _pk1, (uint256,uint256) _a1, uint256 _c, uint256 _z, (uint256[2],uint256[2])[] _u, (uint256[2],uint256[2])[] _s, string[] _attr) returns(bool)
func (_Contract *ContractSession) RegisterSIDSet(_pk1 BCSIDG1Point, _a1 BCSIDG1Point, _c *big.Int, _z *big.Int, _u []BCSIDG2Point, _s []BCSIDG2Point, _attr []string) (*types.Transaction, error) {
	return _Contract.Contract.RegisterSIDSet(&_Contract.TransactOpts, _pk1, _a1, _c, _z, _u, _s, _attr)
}

// RegisterSIDSet is a paid mutator transaction binding the contract method 0xa8fb7efd.
//
// Solidity: function RegisterSIDSet((uint256,uint256) _pk1, (uint256,uint256) _a1, uint256 _c, uint256 _z, (uint256[2],uint256[2])[] _u, (uint256[2],uint256[2])[] _s, string[] _attr) returns(bool)
func (_Contract *ContractTransactorSession) RegisterSIDSet(_pk1 BCSIDG1Point, _a1 BCSIDG1Point, _c *big.Int, _z *big.Int, _u []BCSIDG2Point, _s []BCSIDG2Point, _attr []string) (*types.Transaction, error) {
	return _Contract.Contract.RegisterSIDSet(&_Contract.TransactOpts, _pk1, _a1, _c, _z, _u, _s, _attr)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractTransactor) UpdateStatus(opts *bind.TransactOpts, _orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UpdateStatus", _orderID, _siteID)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractSession) UpdateStatus(_orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.Contract.UpdateStatus(&_Contract.TransactOpts, _orderID, _siteID)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractTransactorSession) UpdateStatus(_orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.Contract.UpdateStatus(&_Contract.TransactOpts, _orderID, _siteID)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractTransactor) UploadACsParams(opts *bind.TransactOpts, _g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadACsParams", _g1, _g2, _pkx, _pky)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractSession) UploadACsParams(_g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadACsParams(&_Contract.TransactOpts, _g1, _g2, _pkx, _pky)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractTransactorSession) UploadACsParams(_g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadACsParams(&_Contract.TransactOpts, _g1, _g2, _pkx, _pky)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactor) BuyerCancelOrder(opts *bind.TransactOpts, _seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCancelOrder", _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactorSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactor) BuyerConfirmWithCode(opts *bind.TransactOpts, _seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerConfirmWithCode", _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactorSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractTransactor) BuyerCreateOrder(opts *bind.TransactOpts, _seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCreateOrder", _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractTransactorSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractTransactor) SellerAcceptOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerAcceptOrder", _buyer, _orderID, attribute)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractTransactorSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactor) SellerCancelOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerCancelOrder", _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactorSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactor) SetProductPrice(opts *bind.TransactOpts, productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setProductPrice", productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactorSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) payable returns()
func (_Contract *ContractTransactor) WithdrawPayment(opts *bind.TransactOpts, _buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "withdrawPayment", _buyerAddr, _orderID)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) payable returns()
func (_Contract *ContractSession) WithdrawPayment(_buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts, _buyerAddr, _orderID)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) payable returns()
func (_Contract *ContractTransactorSession) WithdrawPayment(_buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts, _buyerAddr, _orderID)
}

// ContractBroadcastPubKeyIterator is returned from FilterBroadcastPubKey and is used to iterate over the raw logs and unpacked data for BroadcastPubKey events raised by the Contract contract.
type ContractBroadcastPubKeyIterator struct {
	Event *ContractBroadcastPubKey // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBroadcastPubKeyIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBroadcastPubKey)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBroadcastPubKey)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBroadcastPubKeyIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBroadcastPubKeyIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBroadcastPubKey represents a BroadcastPubKey event raised by the Contract contract.
type ContractBroadcastPubKey struct {
	Seller       common.Address
	Buyer        common.Address
	ProductID    string
	Quantity     *big.Int
	BuyerPubKeyX *big.Int
	BuyerPubKeyY *big.Int
	TotalPrice   *big.Int
	OrderID      string
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterBroadcastPubKey is a free log retrieval operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) FilterBroadcastPubKey(opts *bind.FilterOpts, _seller []common.Address, _buyer []common.Address) (*ContractBroadcastPubKeyIterator, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractBroadcastPubKeyIterator{contract: _Contract.contract, event: "BroadcastPubKey", logs: logs, sub: sub}, nil
}

// WatchBroadcastPubKey is a free log subscription operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) WatchBroadcastPubKey(opts *bind.WatchOpts, sink chan<- *ContractBroadcastPubKey, _seller []common.Address, _buyer []common.Address) (event.Subscription, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBroadcastPubKey)
				if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBroadcastPubKey is a log parse operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) ParseBroadcastPubKey(log types.Log) (*ContractBroadcastPubKey, error) {
	event := new(ContractBroadcastPubKey)
	if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOrderCompletedIterator is returned from FilterOrderCompleted and is used to iterate over the raw logs and unpacked data for OrderCompleted events raised by the Contract contract.
type ContractOrderCompletedIterator struct {
	Event *ContractOrderCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOrderCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOrderCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOrderCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOrderCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOrderCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOrderCompleted represents a OrderCompleted event raised by the Contract contract.
type ContractOrderCompleted struct {
	Buyer  common.Address
	Seller common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterOrderCompleted is a free log retrieval operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) FilterOrderCompleted(opts *bind.FilterOpts, buyer []common.Address, seller []common.Address) (*ContractOrderCompletedIterator, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return &ContractOrderCompletedIterator{contract: _Contract.contract, event: "OrderCompleted", logs: logs, sub: sub}, nil
}

// WatchOrderCompleted is a free log subscription operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) WatchOrderCompleted(opts *bind.WatchOpts, sink chan<- *ContractOrderCompleted, buyer []common.Address, seller []common.Address) (event.Subscription, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOrderCompleted)
				if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderCompleted is a log parse operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) ParseOrderCompleted(log types.Log) (*ContractOrderCompleted, error) {
	event := new(ContractOrderCompleted)
	if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerAcceptedIterator is returned from FilterSellerAccepted and is used to iterate over the raw logs and unpacked data for SellerAccepted events raised by the Contract contract.
type ContractSellerAcceptedIterator struct {
	Event *ContractSellerAccepted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerAcceptedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerAccepted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerAccepted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerAcceptedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerAcceptedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerAccepted represents a SellerAccepted event raised by the Contract contract.
type ContractSellerAccepted struct {
	Seller  common.Address
	Buyer   common.Address
	OrderID string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerAccepted is a free log retrieval operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) FilterSellerAccepted(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerAcceptedIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerAcceptedIterator{contract: _Contract.contract, event: "SellerAccepted", logs: logs, sub: sub}, nil
}

// WatchSellerAccepted is a free log subscription operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) WatchSellerAccepted(opts *bind.WatchOpts, sink chan<- *ContractSellerAccepted, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerAccepted)
				if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerAccepted is a log parse operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) ParseSellerAccepted(log types.Log) (*ContractSellerAccepted, error) {
	event := new(ContractSellerAccepted)
	if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerGetPaymentIterator is returned from FilterSellerGetPayment and is used to iterate over the raw logs and unpacked data for SellerGetPayment events raised by the Contract contract.
type ContractSellerGetPaymentIterator struct {
	Event *ContractSellerGetPayment // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerGetPaymentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerGetPayment)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerGetPayment)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerGetPaymentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerGetPaymentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerGetPayment represents a SellerGetPayment event raised by the Contract contract.
type ContractSellerGetPayment struct {
	Seller  common.Address
	Buyer   common.Address
	OrderID string
	Payment *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerGetPayment is a free log retrieval operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) FilterSellerGetPayment(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerGetPaymentIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerGetPayment", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerGetPaymentIterator{contract: _Contract.contract, event: "SellerGetPayment", logs: logs, sub: sub}, nil
}

// WatchSellerGetPayment is a free log subscription operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) WatchSellerGetPayment(opts *bind.WatchOpts, sink chan<- *ContractSellerGetPayment, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerGetPayment", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerGetPayment)
				if err := _Contract.contract.UnpackLog(event, "SellerGetPayment", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerGetPayment is a log parse operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) ParseSellerGetPayment(log types.Log) (*ContractSellerGetPayment, error) {
	event := new(ContractSellerGetPayment)
	if err := _Contract.contract.UnpackLog(event, "SellerGetPayment", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
